# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"
      - name: Check code formatting
        run: if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then echo "Code is not formatted with gofmt. Run gofmt -w ."; exit 1; fi
      - name: Check go mod tidy
        run: go mod tidy && git diff --exit-code go.mod go.sum
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: -D errcheck -D staticcheck
      - name: Build
        run: go build -v ./...
      - name: Test
        run: go test --race --covermode atomic --coverprofile=full-report.cov ./...
      - name: Trim coverage reporting for generated code
        run: cat full-report.cov | grep -v ".gen.go" > report.cov
      - name: Coveralls GitHub Action
        uses: coverallsapp/github-action@v2.3.4
        with:
          file: report.cov
          format: golang
